//This library dates back to the yabasic era.
//It is provided here as  a service, but is untested on yab

//Installation: create the directory /boot/home/config/settings/yab and copy or symlink
//the library there.

docu tobin$(n) converts integer to binary string
docu bitOR(a,b)  bitwise OR,  equivalent to C lang: a|b
docu bitAND(a,b) bitwise AND, equivalent to C lang: a&b

export sub tobin$(n)
local a$,bit
a$=""
while (n>0)
	bit=mod(n,2)
	n=int(n/2)
	a$=right$(str$(bit),1)+a$
wend
return(a$)
end sub


export sub bitOR$(n1,n2)
local s1$,s2$,tmp$,i,a$
local l1,l2,nbits,d,zero$
zero$="00000000"
s1$=tobin$(n1)
s2$=tobin$(n2)
l1=len(s1$)
l2=len(s2$)
if l1>l2 then
	nbits=l1
	d=l1-l2
	tmp$=mid$(zero$,1,d)+s2$
	s2$=tmp$
elsif l1<l2 then
	nbits=l2
	d=l2-l1
	tmp$=mid$(zero$,1,d)+s1$
	s1$=tmp$
else	nbits=l1
fi

rem print s1$
rem print s2$

a$=""
for i=1 to nbits
	tmp$=mid$(s1$,i,1)+mid$(s2$,i,1)
	if instr(tmp$,"1")>0 then
		a$=a$+"1"
	else	a$=a$+"0"
	fi
next i
return(a$)
end sub


export sub bitAND$(n1,n2)
local s1$,s2$,tmp$,i,a$
local l1,l2,nbits,d,zero$
zero$="00000000"
s1$=tobin$(n1)
s2$=tobin$(n2)
l1=len(s1$)
l2=len(s2$)
if l1>l2 then
	nbits=l1
	d=l1-l2
	tmp$=mid$(zero$,1,d)+s2$
	s2$=tmp$
elsif l1<l2 then
	nbits=l2
	d=l2-l1
	tmp$=mid$(zero$,1,d)+s1$
	s1$=tmp$
else	nbits=l1
fi

rem print s1$
rem print s2$

a$=""
for i=1 to nbits
	tmp$=mid$(s1$,i,1)+mid$(s2$,i,1)
	if instr(tmp$,"11")>0 then
		a$=a$+"1"
	else	a$=a$+"0"
	fi
next i
return(a$)
end sub

